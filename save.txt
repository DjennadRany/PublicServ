serveur fonctionnale : 

const express = require('express');
const { createProxyMiddleware } = require('http-proxy-middleware');

const app = express();

// Remplacez 'VOTRE_API_KEY' par votre véritable API key de La Poste
const API_KEY = 'mlxXnH4ILETq7aUwKP5wkfdB/Wp3VvzlTX4hPY9u/v0QBCA4NcaOzv3I1CI8uvtl';

// Configurer le proxy pour rediriger les requêtes vers l'API de La Poste avec l'API key
app.use('/api', createProxyMiddleware({
  target: 'https://api.laposte.fr/geolocalisation/v1',
  changeOrigin: true,
  headers: {
    'X-Okapi-Key': API_KEY,
  },
}));

// Route pour gérer la requête de recherche depuis le frontend
app.get('/api/adresses', async (req, res) => {
  const { q } = req.query;
  try {
    const response = await fetch(`https://api.laposte.fr/geolocalisation/v1/adresses?q=${encodeURIComponent(q)}`, {
      headers: {
        'X-Okapi-Key': API_KEY,
      },
    });
    const data = await response.json();
    res.json(data);
  } catch (error) {
    console.error('Erreur lors de la recherche des adresses :', error);
    res.status(500).json({ error: 'Erreur lors de la recherche des adresses' });
  }
});

// Route pour vérifier que le serveur Express est en cours d'exécution
app.get('/', (req, res) => {
  res.send('Le serveur Express est en cours d\'exécution !');
});

// Démarrer le serveur sur le port 3001
const PORT = process.env.PORT || 3001;
app.listen(PORT, () => {
  console.log(`Serveur backend en cours d'exécution sur le port ${PORT}`);
});

///app
import React, { useState } from 'react';
import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';
import 'leaflet/dist/leaflet.css';
import SearchBar from './components/SearchBar';
import { searchAddresses } from './services/api';


function App() {
  const [position] = useState([48.8566, 2.3522]);
  const [searchResults, setSearchResults] = useState([]);

  const handleSearch = async (query) => {
    try {
      
      const responseData = await searchAddresses(query);
      setSearchResults(responseData);
      console.log(responseData);
    } catch (error) {
      console.error('Erreur lors de la recherche des adresses :', error);
    }
  };

  return (
    <div className="App">
      <h1>Contrôlez et fiabilisez les adresses</h1>
      <SearchBar onSearch={handleSearch} />

      <MapContainer center={position} zoom={13} style={{ height: '500px', width: '100%' }}>
        <TileLayer url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png" />

        {/* Ajoutez une vérification pour vous assurer que searchResults est un tableau non vide */}
        {Array.isArray(searchResults) && searchResults.length > 0 && searchResults.map((address) => (
          <Marker key={address.code} position={[address.geolocalisation[0], address.geolocalisation[1]]}>
            <Popup>{address.adresse}</Popup>
          </Marker>
        ))}
      </MapContainer>
    </div>
  );
}

export default App;

///app


